input {
  file {
    path => "D:/Movie/spam/*"
    start_position => "beginning"
    sincedb_path => "C:/Users/AhDa/Downloads/logstash-1.5.0/bin/s.db"
  }
}

filter {

  grok {
    match => ["message" , "Delivered-To:[\s]*%{EMAILADDRESS:to}",
              "message" , "Received:.*\[%{IP:ip}\]",
              "message" , "(?m)Subject:[\s]*%{GREEDYDATA:subj}",
	      "message" , "From:[\s]*(%{EMAILADDRESS:from}|.*\<%{EMAILADDRESS:from}\>)",
              "message" , "(?m)Date:[\s]*%{DATESTAMP_RFC2822:LogTime}",
              "message" , "(?m)Date:[\s]*%{LOGTIME2:LogTime}",
	      "message" , "To:[\s]*.*",
	      "message" , "MIME-Version:[\s]*1.0",
	      "message" , "Content-Type:.*charset=\"%{GREEDYDATA:charset}\"",
		  "message" , "Content-Type:.*",
		  "message" , "Content-Length:[\s]*%{GREEDYDATA:ContLength}",
	      "message" , "Content-Transfer-Encoding:[\s]*%{GREEDYDATA:CTEncode}",
		  "message" , ".*%{HTTPLINK:link}.*"]
  }
  date {
  locale => "en"
    match => ["LogTime" , "EEE, dd MMM YYYY HH:mm:ss Z", "EEE,  d MMM YYYY HH:mm:ss Z"]
    target => "LogTime"
  }
  geoip {
      source => "ip"
      target => "geoip"
      database => "/GeoLiteCity.dat"
      add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
      add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
    }
  
  if "_grokparsefailure" not in [tags] {
    if [ip] =~ /127\.0\.0\.1/ or [ip] =~ /10.\d+.\d+.\d+/ or [ip] =~ /192.168.\d+.\d+/ {
       # multiline {
       #   pattern => "Delivered-To:"
       #   what => "previous"
       #   negate => "true"
       # }
     
    } else {

      multiline {
        pattern => "Delivered-To:"
        what => "previous"
        negate => "true"
      }
    } 
  } 


  
	
  
}

output {
  if "_grokparsefailure" not in [tags] and "multiline" in [tags] {
  #  if [ip] !~ "127.0.0.1" and [ip] !~ "10.\d+.\d+.\d+" and [ip] !~ "192.168.\d+.\d+" {
      #stdout {
      #  codec => rubydebug
      #}
      #file {
      #  path => "/home/c1/temp/t"
      #  codec => json_lines
      #}
      elasticsearch {
        protocol => "http"
        host => "localhost:9200"
      }
   # }
  }
}
